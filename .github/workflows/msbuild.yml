name: MSBuild

on: [push]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: foxlox.sln

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    #- name: Restore NuGet packages
    #  working-directory: ${{env.GITHUB_WORKSPACE}}
    #  run: nuget restore ${{env.SOLUTION_FILE_PATH}}
      
    #- uses: lukka/get-cmake@latest
    - name: run-vcpkg
      uses: lukka/run-vcpkg@v6
      with:
        # Just install vcpkg for now, do not install any ports in this step yet.
        setupOnly: true
        # Location of the vcpkg submodule in the Git repository.
        vcpkgDirectory: '${{ github.workspace }}/vcpkg'
        # Since the cache must be invalidated when content of the vcpkg.json file changes, let's
        # compute its hash and append this to the computed cache's key.
        appendedCacheKey: ${{ hashFiles( '**/vcpkg.json' ) }}
        vcpkgTriplet: x64-windows-static
        # Ensure the vcpkg artifacts are cached, they are generated in the 'CMAKE_BINARY_DIR/vcpkg_installed' directory.
        additionalCachedPaths: ${{ env.buildDir }}/vcpkg_installed
        vcpkgGitCommitId: 183a12585a95b36bfdda342eb6d302d3ab3ad466
    - run: |
        ${{ env.VCPKG_ROOT }}\vcpkg.exe install
      shell: powershell
    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}
